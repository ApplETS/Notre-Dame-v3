apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'io.fabric'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply from: rootProject.file('gradle/android.gradle')

def keystorePropertiesFile = rootProject.file("android/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def versionMajor = 3
def versionMinor = 0
def versionPatch = 0
def versionBuild = Integer.valueOf(System.getenv("TRAVIS_BUILD_NUMBER") ?: 0)
println("versionBuild: " + versionBuild)

android {
    defaultConfig {
        applicationId "ca.etsmtl.applets.etsmobile"
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
            storeFile rootProject.file('android/' + keystoreProperties['debugKeyStore'])
            storePassword keystoreProperties['debugStorePassword']
        }
        release {
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storeFile rootProject.file('android/' + keystoreProperties['releaseKeyStore'])
            storePassword keystoreProperties['releaseStorePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            manifestPlaceholders = [enableCrashReporting: "false"]
        }

        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [enableCrashReporting: "true"]
        }
    }

    flavorDimensions "version"
    productFlavors {
        beta {
            dimension "version"
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
            resValue "string", "app_name", "ÉTSMobile bêta"
        }
        production {
            dimension "version"
            resValue "string", "app_name", "ÉTSMobile"
        }
    }


    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test {
            java.srcDirs += 'src/test/kotlin'
        }
        androidTest {
            java.srcDirs += 'src/androidTest/kotlin'
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "com.google.android.material:material:$versions.support"
    implementation "androidx.legacy:legacy-support-v4:$versions.support"
    implementation "androidx.cardview:cardview:$versions.support"
    implementation "androidx.recyclerview:recyclerview:$versions.support"
    implementation "androidx.browser:browser:$versions.support"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.fragment:fragment-ktx:1.0.0'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-oss-licenses:16.0.2'

    // Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
    implementation "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0-alpha02"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
    testImplementation "androidx.arch.core:core-testing:$versions.lifecycle"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"

    // Android Test Core library
    androidTestImplementation 'androidx.test:core:1.1.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:rules:1.1.1'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'

    // Espresso UI Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.espresso"
    androidTestImplementation "org.mockito:mockito-core:$versions.mockito"

    // Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // Google Maps
    implementation "com.google.android.gms:play-services-maps:$versions.google_maps"

    // Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"

    // Material Design Dimensions
    implementation "com.dmitrymalkovich.android:material-design-dimens:$versions.dimens"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"

    // Firebase
    implementation "com.google.firebase:firebase-core:$versions.firebase"
    implementation "com.crashlytics.sdk.android:crashlytics:$versions.firebase_crashlytics"

    // Mockito-Kotlin
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$versions.mockito_kotlin"

    // RecyclerView Animators
    implementation "jp.wasabeef:recyclerview-animators:$versions.recyclerviewanimators"

    // Material-ProgressView
    implementation "com.moos:Material-ProgressView:$versions.materialprogressview"

    // Groupie
    implementation "com.xwray:groupie:$versions.groupie"
    implementation "com.xwray:groupie-kotlin-android-extensions:$versions.groupie"

    // FlexboxLayout
    implementation "com.google.android:flexbox:$versions.flexbox"

    // Buglife
    implementation "com.buglife.sdk:buglife-android:$versions.buglife"

    implementation project(':android:repository')
}

apply plugin: 'com.google.gms.google-services'
