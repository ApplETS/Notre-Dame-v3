apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply from: rootProject.file('gradle/android.gradle')

android {
    defaultConfig {
        versionCode 1
        versionName "1.0"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test {
            java.srcDirs += 'src/test/kotlin'
            java.srcDirs += 'src/test-common/kotlin'
            res.srcDirs += 'src/test/resources'
        }
        androidTest {
            java.srcDirs += 'src/androidTest/kotlin'
            java.srcDirs += 'src/test-common/kotlin'
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
    api "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "androidx.room:room-testing:$versions.room"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
    testImplementation "androidx.arch.core:core-testing:$versions.lifecycle"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttp"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "androidx.test:runner:$versions.test"
    androidTestImplementation "androidx.test:rules:$versions.test"
    androidTestImplementation "androidx.room:room-testing:$versions.room"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.lifecycle"

    // Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // Moshi
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"

    // Mockito-Kotlin
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$versions.mockito_kotlin"

    // Chuck
    debugImplementation "com.readystatesoftware.chuck:library:$versions.chuck"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$versions.chuck"

    // livedata-ktx
    api "com.shopify:livedata-ktx:2.0.1"

    api project(':shared')
}
